In programming, when you perform mathematical operations, the data type matters. For instance, if you add numbers (like 3 + 2), you get 5, and if you multiply numbers (like 3 * 2), you get 6. However, if you try to multiply strings (like 'sudarshan' * 'India'), it results in an error because the computer doesn't know how to multiply text. But if you add strings (like 'sudarshan' + 'India'), it combines them into one string, which is called concatenation. 

When working with lists, adding two lists together just puts them next to each other, creating a new list. For example, if you have list A as [1, 2, 3] and list B as [7, 9, 15], A + B results in [1, 2, 3, 7, 9, 15]. 

Also, when you perform arithmetic operations, the order in which they are done matters. For example, in the expression 10 + 13 * 2, multiplication is done first, so the result is 36 (not 46). This is due to operator precedence, which dictates that multiplication happens before addition unless parentheses are used to specify otherwise. Using parentheses can change the order, so (10 + 13) * 2 will give you 46. Understanding how operators work and their precedence is important for coding correctly.